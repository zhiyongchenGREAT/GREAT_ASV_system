# Generated by run.sh with run_name xvector_cosine_fulltest
import os

class Config(object):
    train_name = "small_GAN_again_eq"
    description = 'small_GAN_again_eq'
    model = 'Xvector_SAP'
    model_settings = {'in_feat': 30, 'emb_size': 512, 'class_num': 1699, \
    's': 50, 'm': 0.2, 'anneal_steps': 1000}
    metric = 'AM_normfree_softmax_anneal_ce_head'
    max_step = 100000


    train_list = '/Lun0/zhiyong/small_mix_data/train.csv'
    # train_list = '/Lun0/zhiyong/vox_small_evad_sparse/vox_small_evad_sparse.csv'
    # train_list = '/Lun0/zhiyong/sdsvc_t2_small_sparse/train_data_small_sparse.csv'
    vox_val_list = '/Lun0/zhiyong/small_mix_data/val_data_csv.csv'
    sdsvc_val_list = ''
    sdsvc_trial_list = '/Lun0/zhiyong/small_mix_data/trial_data_small_csv.csv'
    sdsvc_trial_keys = '/Lun0/zhiyong/small_mix_data/small_tiral_list'
    vox1test_trial_list = '/Lun0/zhiyong/vox_small_evad_sparse/trial_data_csv.csv'
    vox1test_trial_keys = '/Lun0/zhiyong/dataset/vox1_kaldi_test/trials'
    vox1test_aux_list = ''
    vox1test_aux_keys = ''

    scoring_config = {'p_target': [0.01, 0.005], 'c_miss': 1, 'c_fa': 1}
    saver_metric = "MINC"
    lr_ctrl = {"metric": "MINC", "Dur": 4, "sig_th": 0.005}
    expect_scheduler_steps = 7

    val_interval_step = 10000

    train_batch_size = 128

    gpu_id = "0"
    num_workers = 32  # how many workers for loading data
    print_freq = 50  # print info every N batch

    lr = 1e-2  # initial learning rate

    weight_decay = 5e-4
    momentum = 0.9
    lr_decay = 0.1

    model_load_path = ''
    cudnn_benchmark = True

    exp_path = "/Lun2/rzz/kaldi-master/egs/zhiyong/sre19/exp"
    